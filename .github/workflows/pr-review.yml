name: PR Code Review

on:
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git Submodule
        run: |
          echo "[submodule \"private\"]
          path = private
          url = https://${{ secrets.WORKFLOW_TOKEN }}@github.com/BeomHui-Lee/prototypehub-private.git" > .gitmodules
          git submodule update --init --recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          cd private
          npm install openai

      - name: Get changes for review
        id: get_changes
        run: |
          DIFF=$(git diff ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | base64 -w 0)
          echo "diff_base64=$DIFF" >> $GITHUB_OUTPUT
        shell: bash

      - name: Generate Review
        uses: actions/github-script@v7
        env:
          DIFF_BASE64: ${{ steps.get_changes.outputs.diff_base64 }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          script: |
            const { generateReview } = require('./private/scripts/review.js');
            
            try {
              const diff = Buffer.from(process.env.DIFF_BASE64, 'base64').toString('utf-8');
              const review = await generateReview(diff, process.env.OPENAI_API_KEY);
            
              const reviewComment = `## 🤖 AI 코드 리뷰

              ${review}
            
              ---
              이 리뷰는 GPT에 의해 자동으로 생성되었습니다.`;
            
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: reviewComment
              });
            } catch (error) {
              console.error('Error generating review:', error);
              throw error;
            }