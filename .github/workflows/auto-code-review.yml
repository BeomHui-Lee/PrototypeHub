name: Auto Code Review

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  code-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get changes for review
        id: get-changes
        run: |
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            # New PR - Get full diff
            DIFF=$(git diff ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          else
            # Updated PR - Get only new changes
            DIFF=$(git diff ${{ github.event.before }} ${{ github.event.after }})
          fi
          echo "DIFF<<EOF" >> $GITHUB_ENV
          echo "$DIFF" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Generate Code Review
        id: generate-review
        uses: actions/github-script@v7
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DIFF: ${{ env.DIFF }}
        with:
          script: |
            const OpenAI = require('openai');
            
            const openai = new OpenAI({
              apiKey: process.env.OPENAI_API_KEY
            });
            
            const prompt = `다음 코드 변경사항을 리뷰해주세요:
            
            ${process.env.DIFF}
            
            다음 가이드라인을 따라 리뷰해주세요:
            1. 코드 품질, 성능, 보안 관점에서 분석
            2. 잘된 점과 개선점을 명확히 구분
            3. 구체적인 개선 제안 포함
            4. 친근하고 건설적인 톤 유지`;
            
            const completion = await openai.chat.completions.create({
              model: "gpt-4o-mini",
              messages: [
                {
                  role: "system",
                  content: "당신은 15년차 시니어 개발자입니다. 코드 리뷰를 친근하고 건설적인 톤으로 작성해주세요."
                },
                {
                  role: "user",
                  content: prompt
                }
              ],
              max_tokens: 1000,
            });
            
            const review = completion.choices[0].message.content;
            
            // Add review comment to PR
            const reviewComment = `## 🤖 AI 코드 리뷰

            ${review}
            
            ---
            이 리뷰는 GPT-4o-mini에 의해 자동으로 생성되었습니다.`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: reviewComment
            });